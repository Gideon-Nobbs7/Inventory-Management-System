services:
  user-services:
    image: user-client
    build:
      dockerfile: /user_service/Dockerfile 
    networks:
      - ims-network
    ports:
      - 8000:8000
    volumes:
      - ./user_service/db.sqlite3:/app/db.sqlite3:rw
    environment:
      - AMQP_KEY=${AMQP_KEY}
  
  product-services:
    image: product-client
    build:
      dockerfile: /product_service/Dockerfile 
    networks:
      - ims-network
    ports:
      - 8001:8001
    volumes:
      - ./product_service/db.sqlite3:/app/db.sqlite3:rw
    environment:
      - AMQP_KEY=${AMQP_KEY}
  
  order-services:
    image: order-client
    build:
      dockerfile: /order_service/Dockerfile 
    networks:
      - ims-network
    ports:
      - 8002:8002
    volumes:
      - ./order_service/db.sqlite3:/app/db.sqlite3:rw
    environment:
      - AMQP_KEY=${AMQP_KEY}

  inventory-service:
    image: inventory-client
    build:
      dockerfile: /inventory_service/Dockerfile 
    networks:
      - ims-network
    ports:
      - 8003:8003
    volumes:
      - ./inventory_service/db.sqlite3:/app/db.sqlite3:rw
    environment:
      - AMQP_KEY=${AMQP_KEY}
  
  notification-services:
    image: notif-client
    build:
      dockerfile: /notif_service/Dockerfile 
    networks:
      - ims-network
    ports:
      - 8004:8004
    volumes:
      - ./notif_service/db.sqlite3:/app/db.sqlite3:rw
    environment:
      - AMQP_KEY=${AMQP_KEY}
  
networks:
  ims-network:
  